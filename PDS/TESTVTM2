TESTVTM2 TITLE '-  C O M P L E X   V T A M   A P P L I C A T I O N'
         MACRO
&LABEL   CHKERR &TYPE=CHECK,&SAVE=YES
.*
         GBLA  &DIECTR
         LCLC   &C,&C2
.*
&DIECTR  SETA  &DIECTR+1
&C       SETC   'ABN'.'&SYSNDX'
&C2      SETC   'ABNDU'.'&DIECTR'
.*
         AIF   (T'&LABEL EQ 'O').SKIPLAB
&LABEL   DS    0H
.SKIPLAB ANOP  ,
.*
         AIF   ('&TYPE' EQ 'ABORT').ABORT
.*
         LTR   R15,R15             DID OPERATION WORK
         BZ    &C                    YES, SKIP THE ABEND
         SPACE 1
.ABORT   ANOP  ,
         AIF   ('&SAVE' EQ 'NO').NOSAVE
         STM   R15,R1,REGSAVE
         SPACE 1
.NOSAVE  ANOP  ,
&C2      L     R1,=A(IABNDWTO)
         MVC   WORKAREA(LABNDWTO),0(R1)
         MVC   WORKAREA+LABNDWTO-4-2,=CL2'&DIECTR'
         WTO   MF=(E,WORKAREA)
         SPACE 1
         ABEND &DIECTR,DUMP
         SPACE 1
&C       DS    0H
.*
         MEND
         EJECT ,
         MACRO
&LABEL   SETINSRT &TYPE=WTO,&ERROR=
.*
         LCLC  &C
.*
&C       SETC  '4'
         AIF   ('&TYPE' EQ 'WTO').START
&C       SETC  'LSBASTUF'
.*
.START   ANOP
&LABEL   L     R1,=A(QUESTTAB)        -> TRT TABLE
         TRT   WORKAREA+&C.(WORKLEN-&C),0(1)
.*
         AIF   (T'&ERROR EQ 'O').NOERROR
.*
         BZ    &ERROR
         AGO   .MEND
.*
.NOERROR ANOP  ,
         BNZ   *+4+4                  ? FOUND
         LA    R1,0                   ? NOT FOUND
.*
.MEND    MEND
         EJECT ,
         MACRO
&LABEL   GETRPL &REG
.*
&LABEL   LA    R1,#WORK               -> #WORK
         L     R15,=A(GETRPL)         LOAD GETRPL ROUTINE ADDRESS
         BALR  R14,R15                GET RPL (IN REG1)
.*
         AIF   (T'&REG EQ 'O').MEND
.*
         LR    &REG(1),R1             COPY RPL ADDRESS
.*
.MEND    MEND
         SPACE 3
         MACRO
&LABEL   FREERPL &RPL=
.*
&LABEL   LA    R0,4                   OFFSET TO PREFIX
         SR    &RPL(1),R0             -> PREFIX
         L     R15,RPLQUEUE           -> TOP OF QUEUE
         ST    R15,0(,&RPL(1))        MAKE IT NEXT
         CS    R15,&RPL(1),RPLQUEUE   ADD TO FREE QUEUE
         BNE   *-4-4                    TRY AGAIN
         SR    &RPL(1),&RPL(1)        RPL NO LONGER AVAILABLE
.*
         MEND
         EJECT ,
         MACRO
&LABEL   SCHEDCLS &ARG=
.*
         LCLC  &C
&C       SETC  'SCH'.'&SYSNDX'
.*
&LABEL   LA    R14,PENDCLOS
         LA    R15,NUMCLOSE
         SPACE 1
&C       LA    R0,0
         CS    R0,&ARG(1),CLOSECID-CLOSENTY(R14)
         BE    &C.B
         SPACE 1
         LA    R14,CLOSLNTH(,R14)
         BCT   R15,&C
         SPACE 1
         CHKERR TYPE=ABORT
         SPACE 1
&C.B     DS    0H
.*
         MEND
         EJECT ,
TESTVTM2 CSECT
         SPACE 1
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
         SAVE  (14,12),,*
         SPACE 1
         LR    R12,R15
         USING TESTVTM2,R12
         SPACE 1
         L     R11,0(,R1)
         LA    R11,1(,R11)         -> APPLID
         SPACE 1
         GETMAIN RU,LV=#AMT,SP=8
         SPACE 1
         LA    R2,0(,R1)
         LA    R3,#AMT
         XR    R14,R14
         XR    R15,R15
         MVCL  R2,R14
         SPACE 1
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING #WORK,R13
         SPACE 1
         LA    R3,ACBLENTH
         SHOWCB AM=VTAM,FIELDS=(ACBLEN,RPLLEN,NIBLEN),AREA=(R3),       X
               LENGTH=12,MF=(G,WORKAREA)
         CHKERR ,
         SPACE 1
         GENCB BLK=EXLST,AM=VTAM,LOGON=LOGEXIT,RELREQ=REQEXIT,         X
               LOSTERM=LOSTEXIT,                                       X
               MF=(G,WORKAREA)     BUILD AN EXLST
         CHKERR ,
         LR    R3,R1               SAVE ADDRESS
         SPACE 1
         L     R9,ACBLENTH         FETCH ACB LENGTH
         LA    R9,4(,R9)           PLUS ANCHOR WORD
         GETMAIN RU,LV=(R9),SP=9   GET ACB IMAGE
         ST    R13,0(,R1)          SAVE SAVE AREA ADDRESS IN ANCHOR
         STM   R0,R1,ACBADDR       SAVE ACB REGS
         SPACE 1
         LA    R8,4(,R1)
         USING IFGACB,R8
         SPACE 1
         GENCB BLK=ACB,AM=VTAM,WAREA=(R8),LENGTH=(R9),APPLID=(R11),    X
               MACRF=LOGON,EXLST=(R3),MF=(G,WORKAREA)                  X
                                   COMPLETE THE ACB
         CHKERR ,
         SPACE 1
         GENCB BLK=NIB,AM=VTAM,MODE=RECORD,MF=(G,WORKAREA),            X
               COPIES=NUMCIDS+1    GENERATE NESCESSARY NIBS
         CHKERR ,
         ST    R1,NIBADDR
         SPACE 1
         GENCB BLK=RPL,AM=VTAM,ACB=(R8),COPIES=3,MF=(G,WORKAREA)       X
                                        GENERATE MODEL + RECEIVE RPLS
         CHKERR ,
         SPACE 1
         ST    R1,MODELRPL
         A     R1,RPLLENTH
         ST    R1,RECVRPL1
         A     R1,RPLLENTH
         ST    R1,RECVRPL2
         SPACE 1
         MVI   OPENLIST,X'80'
         OPEN  ((R8)),MF=(E,OPENLIST)  ATTEMPT TO OPEN ACB
         CHKERR ,
         SPACE 1
         XR    R1,R1                   CLEAR
         IC    R1,0(,R11)              APPLID LENGTH
         BCTR  R1,0                    DECREMENT FOR EX
         MVC   APPLID,=8C' '           BLANK
         MVC   APPLID(*-*),1(R11)      MOVE MODEL
         EX    R1,*-6                  COPY APPLID
         SPACE 1
         MVC   WORKAREA(LSTRTWTO),ISTRTWTO
         SETINSRT ,
         MVC   0(8,R1),APPLID          INSERT APPLID
         WTO   MF=(E,WORKAREA)         APPLICATION ACTIVE
         SPACE 1
         GETRPL ,                      AQUIRE AN RPL
         L     R0,=A(FREPLXIT)
         SETLOGON RPL=(1),OPTCD=(ASY,START),EXIT=(R0)
         CHKERR ,
         SPACE 1
ALLQUAL  DS    0H
         L     R2,=A(RECVEXIT)
         L     R1,RECVRPL1
         RECEIVE RPL=(1),RTYPE=(DFSYN,NDFASY,NRESP),                   X
               OPTCD=(ASY,ANY,TRUNC,CA,Q),AREA=CARD1,AREALEN=80,       X
               BRACKET=(NBB,NEB),EXIT=(R2)
         CHKERR ,
         SPACE 1
         L     R1,RECVRPL2
         RECEIVE RPL=(1),RTYPE=(DFSYN,NDFASY,NRESP),                   X
               OPTCD=(ASY,ANY,TRUNC,CA,Q),AREA=CARD2,AREALEN=80,       X
               BRACKET=(NBB,NEB),EXIT=(R2)
         CHKERR ,
         SPACE 1
         MVC   OTIMRCOD(LTIMRCOD),ITIMRCOD
         STIMER REAL,OTIMRCOD,BINTVL==F'300'
         SPACE 1
         WAIT  ECB=STOPECB
         SPACE 1
         WTO   'TESTVTM2 - APPLICATION IS SHUTING DOWN',               X
               ROUTCDE=11,DESC=7
         SPACE 1
         GETRPL R6
         SETLOGON RPL=(R6),OPTCD=(SYN,QUIESCE)
         CHKERR ,
         SPACE 1
         STIMER WAIT,BINTVL==F'300'   WAIT 3 SECONDS
         SPACE 1
         LA    R4,CIDLIST
         USING CIDENTRY,R4
         LA    R5,NUMCIDS
CLSDST   DS    0H
         ICM   R2,B'1111',CIDCID      FETCH CID
         BZ    ECLSDST                  NOT ACTIVE
         SPACE 1
         CLSDST RPL=(R6),OPTCD=(SYN,RELEASE),ARG=(R2)                  X
                                      RELEASE THE REMINAL
         CHKERR ,
         SPACE 1
         MVC   WORKAREA(LCLOSWTO),ICLOSWTO
         SETINSRT ,
         MVC   0(8,R1),CIDNAME        INSERT TERMINAL ID
         WTO   MF=(E,WORKAREA)        REPORT ON LOGOFF
         SPACE 1
ECLSDST  DS    0H
         LA    R4,CIDENTRY+CIDLENTH   -> NEXT CID
         BCT   R5,CLSDST              AND CLOSE IT
         SPACE 1
         DROP  R4
         SPACE 1
         CLOSE ((R8)),MF=(E,OPENLIST)
         CHKERR ,
         SPACE 1
         MVC   WORKAREA(LDONEWTO),IDONEWTO
         SPACE 1
         SETINSRT ,
         L     R15,RPLTOTAL
         CVD   R15,DWORD
         UNPK  0(3,R1),DWORD+6(2)     INSERT COUNT
         OI    2(R1),X'F0'
         SPACE 1
         SETINSRT ,
         L     R15,RPLREQST
         CVD   R15,DWORD
         UNPK  0(3,R1),DWORD+6(2)     INSERT COUNT
         OI    2(R1),X'F0'
         SPACE 1
         WTO   MF=(E,WORKAREA)        REPORT ON LOGOFF
         SPACE 1
         LM    R0,R1,ACBADDR
         FREEMAIN RU,LV=(0),A=(1),SP=9  FREE THE ACB
         SPACE 1
         LR    R1,R13
         L     R13,4(,R13)
         FREEMAIN RU,LV=#AMT,A=(1),SP=8
         SPACE 1
         RETURN (14,12),RC=0
         SPACE 2
         LTORG ,
         SPACE 2
ICLOSWTO WTO   'TESTVTM2 - LOGGED OFF ???????? FOR SHUTDOWN',          X
               ROUTCDE=11,DESC=7,MF=L
LCLOSWTO EQU   *-ICLOSWTO
         SPACE 2
IDONEWTO WTO   'TESTVTM2 - APPLICATION COMPLETE - RPL STATS: COUNT=???,*
                REQUESTS=???',ROUTCDE=11,DESC=7,MF=L
LDONEWTO EQU   *-IDONEWTO
         SPACE 2
ISTRTWTO WTO   'TESTVTM2 - APPLICATION ???????? IS UP',                X
               ROUTCDE=11,DESC=7,MF=L
LSTRTWTO EQU   *-ISTRTWTO
         SPACE 2
         DROP  ,
         EJECT ,
ITIMRCOD DS    0H
         STM   R14,R12,12(R13)
         SPACE 1
         LR    R1,R15                 CURRENT ADDRESS
         LA    R0,OTIMRCOD-#WORK      OFFSET TO #WORK
         SR    R1,R0                  R1 -> #WORK
         L     R15,ITIMRCD2-ITIMRCOD(,R15)  -> READ ONLY SECTION
         BR    R15                    GO DO THE TIMER
         SPACE 1
ITIMRCD2 DC    A(TIMRCODE)            READ ONLY SECTION ADDRESS
         SPACE 1
LTIMRCOD EQU   *-ITIMRCOD             LENGTH OF PREFIX
         SPACE 3
TIMRCODE DS    0H
         LR    R12,R15
         USING TIMRCODE,R12
         SPACE 1
         LR    R11,R1
         USING #WORK,R11
         SPACE 1
         LA    R1,SAVE3               GET A SAVE AREA
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         SPACE 1
         LA    R10,PENDCLOS           -> PENDING CLSDST TABLE
         USING CLOSENTY,R10
         LA    R9,NUMCLOSE
         SPACE 1
TIMRLOOP DS    0H
         ICM   R7,B'1111',CLOSECID    ENTRY ACTIVE?
         BZ    ETIMRLOP                 NO, IGNORE IT
         SPACE 1
         TS    CLOSFLAG               ALREADY SEEN
         BZ    ETIMRLOP                 NOPE, ALLOW FULL TIME
         SPACE 1
         XC    CLOSENTY(CLOSLNTH),CLOSENTY
         SPACE 1
         GETRPL ,
         L     R0,=A(FREPLXIT)
         CLSDST RPL=(1),OPTCD=(ASY,RELEASE),ARG=(R7),EXIT=(R0)         X
                                      RELEASE THE REMINAL
         CHKERR ,
         SPACE 1
ETIMRLOP DS    0H
         LA    R10,CLOSENTY+CLOSLNTH  -> NEXT CLSDST ENTRY
         BCT   R9,TIMRLOOP            AND CHECK IT
         SPACE 1
         STIMER REAL,OTIMRCOD,BINTVL==F'300'  RESET INTERVAL
         SPACE 1
         L     R13,4(,R13)            -> PREV SAVE
         RETURN (14,12),RC=0          AND GO AWAY
         SPACE 2
         LTORG ,
         SPACE 2
         DROP  ,
         EJECT ,
LOGEXIT  DS    0H
         LR    R12,R15
         USING LOGEXIT,R12
         SPACE 1
         LR    R11,R1                 SAVE PARM ADDRESS
         SPACE 1
         L     R8,0(,R11)             -> ACB
         USING IFGACB,R8
         SPACE 1
         LA    R10,4
         LCR   R10,R10
         L     R10,0(R10,R8)          FETCH ACB PREFIX
         USING #WORK,R10
         SPACE 1
         LA    R13,SAVE2              SET UP NEW SAVE AREA
         ST    R14,SAVE2              AND SAVE RETURN ADDRESS
         SPACE 1
         TM    STOPECB,X'40'          SHUTDOWN IN PROGRESS
         BO    IGNORE                   YES, IGNORE THE LOGON
         SPACE 1
         L     R3,4(,R11)             -> TERMINAL NAME
         SPACE 1
         LA    R4,CIDLIST
         USING CIDENTRY,R4
         LA    R0,NUMCIDS
CHKDUP   DS    0H
         CLC   CIDNAME,0(R3)          DUPLICATE TERMINAL?
         BE    ABND$DUP                 YES, ERROR
         SPACE 1
         LA    R4,CIDENTRY+CIDLENTH   -> NEXT SLOT
         BCT   R0,CHKDUP              AND CHECK IT
         SPACE 1
         LA    R4,CIDLIST
         L     R7,NIBADDR
         LA    R0,NUMCIDS
FINDSLOT DS    0H
         OC    CIDCID,CIDCID          FREE CID?
         BZ    GOTSLOT                  YES, GOT THE SPOT
         SPACE 1
         LA    R4,CIDENTRY+CIDLENTH   -> SLOT
         A     R7,NIBLENTH            -> NEXT NIB
         BCT   R0,FINDSLOT            AND CHECK IT
         SPACE 1
         B     FAILIT                 LOGON NOT ACCEPTED
         SPACE 1
ABND$DUP DS    0H
         CHKERR TYPE=ABORT,SAVE=NO
         SPACE 1
GOTSLOT  DS    0H
         MVC   CIDCID,20(R11)         INSERT CID IN TABLE
         MVC   CIDNAME,0(R3)                 NODE NAME
         SPACE 1
         MODCB NIB=(R7),NAME=(*,CIDNAME),USERFLD=(R4),AM=VTAM,         X
               MF=(G,WORKAREA)        COMPLETE THE NIB
         CHKERR ,
         SPACE 1
         LA    R3,RECVAREA
         L     R5,16(,R11)            -> READ-ONLY RPL
         SHOWCB AM=VTAM,RPL=(R5),FIELDS=(AREA),                        X
               AREA=(R3),LENGTH=L'RECVAREA,MF=(G,WORKAREA)
         CHKERR ,
         SPACE 1
         L     R3,RECVAREA
         CLC   =X'810601',0(R3)       IS IT A CINIT RU?
         BNE   NOTCINIT                 NO, DO INQUIRE
         SPACE 1
         USING ISTDBIND-12,R3
         SPACE 1
         MVC   CIDBIND(24),ISTDBIND   COPY BIND DATA
         SPACE 1
         LA    R1,BINSPRIR            -> DEFAULTS
         SPACE 1
         CLI   BINPRESZ,BINPSZRC      ALTERNATES?
         BNE   *+4+4                    NOPE
         LA    R1,BINSALTR              YES, USE THEM
         SPACE 1
         XR    R0,R0                  CLEAR
         IC    R0,0(,R1)              FETCH ROWS
         STH   R0,CIDROWS             SAVE VALUE
         IC    R0,1(,R1)              FETCH COLUMNS
         STH   R0,CIDCOLS             SAVE VALUE
         SPACE 1
         DROP  R3
         SPACE 1
         B     OPENDEST
         SPACE 1
NOTCINIT DS    0H
         WTO   'TESTVTM2 - NOTCINIT CODE SECTION ENTERED',             X
               ROUTCDE=(2,11),DESC=(2,7)
         SPACE 1
         GETRPL ,
         L     R0,CIDCID              FETCH CID VALUE
         INQUIRE RPL=(1),ARG=(R0),AREA=CIDBIND,AREALEN=6*8,            X
               OPTCD=(ASY,SESSPARM),EXIT=BINDEXIT
         CHKERR ,
         SPACE 1
OPENDEST DS    0H
         GETRPL ,
         OPNDST RPL=(1),ACB=(R8),NIB=(R7),EXIT=GOODMXIT,               X
               OPTCD=(ASY,ACCEPT,SPEC,NQ)   COMPLETE THE SESSION
         CHKERR ,
         SPACE 1
         MVC   WORKAREA(LSIGNWTO),ISIGNWTO
         SPACE 1
         SETINSRT ,
         MVC   0(8,R1),CIDNAME        INSERT TERMINAL NAME
         WTO   MF=(E,WORKAREA)
         SPACE 1
         B     LOGNEND
         SPACE 2
FAILIT   DS    0H
         GETRPL ,
         OPNDST RPL=(1),ACB=(R8),NIB=(R7),EXIT=FAILEXIT,               X
               OPTCD=(ASY,ACCEPT,SPEC,NQ)   GO TO TERMINAL
         CHKERR ,
         SPACE 1
         B     LOGNEND
         SPACE 2
IGNORE   DS    0H
         GETRPL ,
         L     R0,=A(FREPLXIT)
         CLSDST RPL=(1),OPTCD=(ASY,RELEASE),EXIT=(R0)
         CHKERR ,
         SPACE 2
LOGNEND  DS    0H
         L     R14,SAVE2
         XR    R15,R15
         BR    R14
         SPACE 2
ISIGNWTO WTO   'TESTVTM2 - TERMINAL ???????? SIGNON ACCEPTED',         X
               ROUTCDE=11,DESC=7,MF=L
LSIGNWTO EQU   *-ISIGNWTO
         SPACE 2
         LTORG ,
         SPACE 2
         DROP  ,
         EJECT ,
GOODMXIT DS    0H
         LR    R12,R15
         USING GOODMXIT,R12
         SPACE 1
         LR    R6,R1                  SAVE RPL ADDRESS
         USING IFGRPL,R6
         SPACE 1
         L     R8,RPLDACB             -> ACB
         USING IFGACB,R8
         SPACE 1
         LA    R10,4
         LCR   R10,R10
         L     R10,0(R10,R8)          FETCH ACB PREFIX
         USING #WORK,R10
         SPACE 1
         LA    R13,SAVE2              SET UP NEW SAVE AREA
         ST    R14,SAVE2              AND SAVE RETURN ADDRESS
         SPACE 1
         CHECK RPL=(R6)
         SPACE 1
         TM    STOPECB,X'40'          SHUTDOWN IN PROGRESS?
         BO    GOODMEND                 YES, ALL DONE
         SPACE 1
         CHKERR ,                     FAIL ON OPNDST ERROR
         SPACE 1
         MVC   WORKAREA(LFIRSTMS),FIRSTMSG
         SETINSRT TYPE=SEND
         MVC   0(8,R1),APPLID         INSERT APPLID
         SPACE 1
         GETRPL ,
         L     R0,=A(FREPLXIT)
         SEND  RPL=(R6),STYPE=REQ,CONTROL=DATA,OPTCD=(ASY),            X
               AREA=WORKAREA,RECLEN=LFIRSTMS,RESPOND=(NEX,FME,NRRN),   X
               BRACKET=(BB,NEB),POST=SCHED,EXIT=(R0),CHNGDIR=(CMD)     X
                                      SEND GOOD MORNING MESSAGE
         CHKERR ,
         SPACE 1
GOODMEND DS    0H
         L     R14,SAVE2
         XR    R15,R15
         BR    R14
         SPACE 2
         LTORG ,
         SPACE 2
FIRSTMSG DC    X'F5431140403C5D7F001D401311C1501DF8'
         DC    C'WELCOME TO THE TESTVTM2 APPLICATION ????????'
LFIRSTMS EQU   *-FIRSTMSG
         SPACE 2
         DROP  ,
         EJECT ,
STATEXIT DS    0H
         LR    R12,R15
         USING STATEXIT,R12
         SPACE 1
         LR    R6,R1                  SAVE RPL ADDRESS
         USING IFGRPL,R6
         SPACE 1
         L     R8,RPLDACB             -> ACB
         USING IFGACB,R8
         SPACE 1
         LA    R10,4
         LCR   R10,R10
         L     R10,0(R10,R8)          FETCH ACB PREFIX
         USING #WORK,R10
         SPACE 1
         LA    R13,SAVE2              SET UP NEW SAVE AREA
         ST    R14,SAVE2              AND SAVE RETURN ADDRESS
         SPACE 1
         CHECK RPL=(R6)
         SPACE 1
         TM    STOPECB,X'40'          SHUTDOWN IN PROGRESS?
         BO    STATEND                  YES, ALL DONE
         SPACE 1
         STM   R15,R1,REGSAVE         SAVE STATUS
         SPACE 1
         LA    R15,4                  RPL PREFIX LENGTH
         LCR   R15,R15
         L     R4,0(R15,R6)           FETCH PREFIX VALUE
         USING CIDENTRY,R4
         SPACE 1
         LA    R3,DWORD
         SHOWCB AM=VTAM,RPL=(R6),FIELDS=(FDBK),LENGTH=4,               X
               AREA=(R3),MF=(G,WORKAREA)   GET RPL FEEDBACK
         CHKERR ,
         L     R3,DWORD               FETCH FEEDBACK VALUE
         SPACE 1
         ICM   R15,B'1111',REGSAVE    RPL GO OK?
         BZ    GIVESTAT                 YES, GIVE STATUS
         SPACE 1
         LA    R3,DWORD
         SHOWCB AM=VTAM,RPL=(R6),FIELDS=(RTNCD,FDBK2),                 X
               AREA=(R3),LENGTH=12,MF=(G,WORKAREA)
         CHKERR ,
         SPACE 1
         CLI   DWORD+3,X'14'          RTCND=14
         BNE   FAILSTAT                 NO, NOT EXPECTED ERROR
         CLI   DWORD+7,X'4C'          FDBK2=4C?
         BE    GIVSTAT0                 UNKNOWN/INACTIVE LU
         CLI   DWORD+7,X'53'          FDBK2=53?
         BE    GIVSTAT0                 UNKNOWN/INACTIVE LU
         SPACE 1
FAILSTAT DS    0H
         CHKERR TYPE=ABORT,SAVE=NO    FAIL ON INQUIRE ERROR
         SPACE 1
GIVSTAT0 DS    0H
         LA    R3,36                  INVALID RETURN CODE
         SPACE 1
GIVESTAT DS    0H
         SLL   R3,1                   *2
         LA    R3,STATUSMS(R3)        -> TABLE ENTRY
         LM    R2,R3,0(R3)            FETCH SKELETON ADDR, LENGTH
         MVC   WORKAREA(*-*),0(R2)    MOVE MODEL
         EX    R3,*-6                 COPY SKELETON
         SPACE 1
         SETINSRT TYPE=SEND
         MVC   0(8,R1),CIDAPPLN       INSERT APPLID
         XC    CIDAPPLN,CIDAPPLN      CLEAR IT
         SPACE 1
         L     R0,=A(FREPLXIT)
         L     R2,CIDCID
         SEND  RPL=(R6),STYPE=REQ,CONTROL=DATA,OPTCD=(ASY),ARG=(R2),   X
               AREA=WORKAREA,RECLEN=(R3),RESPOND=(NEX,FME,NRRN),       X
               BRACKET=(NBB,NEB),POST=SCHED,EXIT=(R0),CHNGDIR=(CMD)    X
                                      GIVE APPLICATION STATUS
         CHKERR ,
         SPACE 1
STATEND  DS    0H
         L     R14,SAVE2
         XR    R15,R15
         BR    R14
         SPACE 2
         LTORG ,
         SPACE 2
STATUSMS DC    0F'0'
         DC    A(STATUSM1,LSTATSM1)   RC = 0
         DC    A(STATUSM2,LSTATSM2)        4
         DC    A(STATUSM3,LSTATSM3)        8
         DC    A(STATUSM4,LSTATSM4)        12
         DC    A(STATUSM5,LSTATSM5)        16
         DC    2X'00666666'                20
         DC    2X'00666666'                24
         DC    2X'00666666'                28
         DC    2X'00666666'                32
         DC    A(STATUSM6,LSTATSM6)        36
         SPACE 1
STATUSM1 DC    X'F5431140403C5D7F001D401311C1501DF8'
         DC    C'APPLICATION ???????? IS ACTIVE'
LSTATSM1 EQU   *-STATUSM1
         SPACE 2
STATUSM2 DC    X'F5431140403C5D7F001D401311C1501DF8'
         DC    C'APPLICATION ???????? IS NOT ACTIVE'
LSTATSM2 EQU   *-STATUSM2
         SPACE 2
STATUSM3 DC    X'F5431140403C5D7F001D401311C1501DF8'
         DC    C'APPLICATION ???????? ACTIVE, MACRF=NLOGON'
LSTATSM3 EQU   *-STATUSM3
         SPACE 2
STATUSM4 DC    X'F5431140403C5D7F001D401311C1501DF8'
         DC    C'APPLICATION ???????? ACTIVE, LOGONS ARE STOPPED'
LSTATSM4 EQU   *-STATUSM4
         SPACE 2
STATUSM5 DC    X'F5431140403C5D7F001D401311C1501DF8'
         DC    C'APPLICATION ???????? ACTIVE, LOGONS QUIESCED'
LSTATSM5 EQU   *-STATUSM5
         SPACE 2
STATUSM6 DC    X'F5431140403C5D7F001D401311C1501DF8'
         DC    C'APPLICATION ???????? NOT DEFINED TO VTAM'
LSTATSM6 EQU   *-STATUSM6
         SPACE 2
         DROP  ,
         EJECT ,
BINDEXIT DS    0H
         LR    R12,R15
         USING BINDEXIT,R12
         SPACE 1
         LR    R6,R1                  SAVE RPL ADDRESS
         USING IFGRPL,R6
         SPACE 1
         L     R8,RPLDACB             -> ACB
         USING IFGACB,R8
         SPACE 1
         LA    R10,4
         LCR   R10,R10
         L     R10,0(R10,R8)          FETCH ACB PREFIX
         USING #WORK,R10
         SPACE 1
         LA    R13,SAVE2              SET UP NEW SAVE AREA
         ST    R14,SAVE2              AND SAVE RETURN ADDRESS
         SPACE 1
         CHECK RPL=(R6)
         CHKERR ,                     FAIL ON INQUIRE ERROR
         SPACE 1
         LA    R3,RECVAREA
         SHOWCB AM=VTAM,RPL=(R6),FIELDS=(AREA),                        X
               AREA=(R3),LENGTH=L'RECVAREA,MF=(G,WORKAREA)
         CHKERR ,
         SPACE 1
         L     R7,RECVAREA
         USING ISTDBIND,R7
         SPACE 1
         L     R4,=A(CIDENTRY-CIDBIND)  OFFSET TO BUFFER
         LA    R4,0(R4,R7)            -> CIDENTRY
         USING CIDENTRY,R4
         SPACE 1
         LA    R1,BINSPRIR            -> DEFAULTS
         SPACE 1
         CLI   BINPRESZ,BINPSZRC      ALTERNATES?
         BNE   *+4+4                    NOPE
         LA    R1,BINSALTR              YES, USE THEM
         SPACE 1
         XR    R0,R0                  CLEAR
         IC    R0,0(,R1)              FETCH ROWS
         STH   R0,CIDROWS             SAVE VALUE
         IC    R0,1(,R1)              FETCH COLUMNS
         STH   R0,CIDCOLS             SAVE VALUE
         SPACE 1
         FREERPL RPL=(R6)
         SPACE 1
         L     R14,SAVE2
         XR    R15,R15
         BR    R14
         SPACE 2
         LTORG ,
         SPACE 2
         DROP  ,
         EJECT ,
FAILEXIT DS    0H
         LR    R12,R15
         USING FAILEXIT,R12
         SPACE 1
         LR    R6,R1                  SAVE RPL ADDRESS
         USING IFGRPL,R6
         SPACE 1
         L     R8,RPLDACB             -> ACB
         USING IFGACB,R8
         SPACE 1
         LA    R10,4
         LCR   R10,R10
         L     R10,0(R10,R8)          FETCH ACB PREFIX
         USING #WORK,R10
         SPACE 1
         LA    R13,SAVE2              SET UP NEW SAVE AREA
         ST    R14,SAVE2              AND SAVE RETURN ADDRESS
         SPACE 1
         CHECK RPL=(R6)
         SPACE 1
         TM    STOPECB,X'40'          SHUTDOWN IN PROGRESS?
         BO    FAILEND                  YES, ALL DONE
         SPACE 1
         CHKERR ,                     FAIL ON OPNDST ERROR
         SPACE 1
         L     R7,RPLARG              FETCH ARG FIELD
         SCHEDCLS ARG=(R7)            SCHEDULE CLSDST
         SPACE 1
         L     R0,=A(FREPLXIT)
         SEND  RPL=(R6),STYPE=REQ,CONTROL=DATA,OPTCD=(ASY),            X
               AREA=FAILMSG,RECLEN=LFAILMSG,RESPOND=(NEX,FME,NRRN),    X
               BRACKET=(BB,NEB),POST=SCHED,EXIT=(R0)                   X
                                      SEND FAILURE MESSAGE
         CHKERR ,
         SPACE 1
FAILEND  DS    0H
         L     R14,SAVE2
         XR    R15,R15
         BR    R14
         SPACE 2
         LTORG ,
         SPACE 2
FAILMSG  DC    X'F5431140403C5D7F001D401311C1501DF8'
         DC    C'LOGON NOT ACCEPTED - TOO MANY SESSIONS'
LFAILMSG EQU   *-FAILMSG
         SPACE 2
         DROP  ,
         EJECT ,
REQEXIT  DS    0H
         LR    R12,R15
         USING REQEXIT,R12
         SPACE 1
         LR    R11,R1                 SAVE PARM ADDRESS
         SPACE 1
         L     R8,0(,R11)             -> ACB
         USING IFGACB,R8
         SPACE 1
         LA    R10,4
         LCR   R10,R10
         L     R10,0(R10,R8)          FETCH ACB PREFIX
         USING #WORK,R10
         SPACE 1
         LA    R13,SAVE2              SET UP NEW SAVE AREA
         ST    R14,SAVE2              AND SAVE RETURN ADDRESS
         SPACE 1
         L     R3,4(,R11)             -> SYMBOLIC NAME
         LA    R4,CIDLIST
         USING CIDENTRY,R4
         LA    R0,NUMCIDS
FINDTERM DS    0H
         CLC   CIDNAME,0(R3)          FOR THIS TERMINAL
         BE    GOTTERM                  YES, GOT THE TERMINAL
         SPACE 1
         LA    R4,CIDENTRY+CIDLENTH   -> SLOT
         BCT   R0,FINDTERM            AND CHECK IT
         SPACE 1
         CHKERR TYPE=ABORT            SOMETHING IS WRONG
         SPACE 1
GOTTERM  DS    0H
         MVC   WORKAREA(LDROPWTO),IDROPWTO
         SETINSRT ,
         MVC   0(8,R1),0(R3)          INSERT TERMINAL ID
         WTO   MF=(E,WORKAREA)
         SPACE 1
         L     R7,CIDCID              FETCH CID
         XC    CIDENTRY(CIDLENTH),CIDENTRY  ENTRY NO LONGER IN USE
         SPACE 1
         DROP  R4
         SPACE 1
         GETRPL ,
         L     R0,=A(FREPLXIT)
         CLSDST RPL=(1),OPTCD=(ASY,RELEASE),ARG=(R7),EXIT=(R0)         X
                                      RELEASE THE TERMINAL
         CHKERR ,
         SPACE 1
         L     R14,SAVE2
         XR    R15,R15
         BR    R14
         SPACE 2
IDROPWTO WTO   'TESTVTM2 - RELREQ ENTERED FOR ???????? - DROPPING',    X
               ROUTCDE=11,DESC=7,MF=L
LDROPWTO EQU   *-IDROPWTO
         SPACE 2
         LTORG ,
         SPACE 2
         DROP  ,
         EJECT ,
LOSTEXIT DS    0H
         LR    R12,R15
         USING LOSTEXIT,R12
         SPACE 1
         LR    R11,R1                 SAVE PARM ADDRESS
         SPACE 1
         L     R8,0(,R11)             -> ACB
         USING IFGACB,R8
         SPACE 1
         LA    R10,4
         LCR   R10,R10
         L     R10,0(R10,R8)          FETCH ACB PREFIX
         USING #WORK,R10
         SPACE 1
         LA    R13,SAVE2              SET UP NEW SAVE AREA
         ST    R14,SAVE2              AND SAVE RETURN ADDRESS
         SPACE 1
         L     R4,8(,R11)             -> TABLE ENTRY
         USING CIDENTRY,R4
         SPACE 1
         MVC   WORKAREA(LLOSTWTO),ILOSTWTO
         SETINSRT ,
         MVC   0(8,R1),CIDNAME        INSERT TERMINAL ID
         SPACE 1
         OC    CIDCID,CIDCID          ALREADY CLEARED?
         BNZ   *+4+6                    NO
         MVC   0(8,R1),=CL8'*UNKNOWN'   YES, WHATS UP?
         SPACE 1
         L     R0,12(,11)
         CVD   R0,DWORD
         SETINSRT ,
         UNPK  0(2,R1),DWORD+6(2)
         OI    1(R1),X'F0'
         WTO   MF=(E,WORKAREA)
         SPACE 1
         OC    CIDCID,CIDCID          ALREADY CLEARED?
         BZ    LOSTEND                  YES, SKIP THE CLSDST
         SPACE 1
         XC    CIDENTRY(CIDLENTH),CIDENTRY  CLEAR TABLE ENTRY
         SPACE 1
         DROP  R4
         SPACE 1
         L     R7,4(,R11)             FETCH CID
         GETRPL ,
         L     R0,=A(FREPLXIT)
         CLSDST RPL=(1),OPTCD=(ASY,RELEASE),ARG=(R7),EXIT=(R0)         X
                                      RELEASE THE TERMINAL
         CHKERR ,
         SPACE 1
LOSTEND  DS    0H
         L     R14,SAVE2
         XR    R15,R15
         BR    R14
         SPACE 2
ILOSTWTO WTO   'TESTVTM2 - LOSTERM ENTERED ON ????????, CODE = ??',    X
               ROUTCDE=11,DESC=7,MF=L
LLOSTWTO EQU   *-ILOSTWTO
         SPACE 2
         LTORG ,
         SPACE 2
         DROP  ,
         EJECT ,
RECVEXIT DS    0H
         LR    R12,R15
         USING RECVEXIT,R12
         LA    R11,RECVEXIT+X'FFF'
         USING RECVEXIT+X'FFF',R11
         SPACE 1
         LR    R6,R1                  SAVE RPL ADDRESS
         USING IFGRPL,R6
         SPACE 1
         L     R8,RPLDACB             -> ACB
         USING IFGACB,R8
         SPACE 1
         LA    R10,4
         LCR   R10,R10
         L     R10,0(R10,R8)          FETCH ACB PREFIX
         USING #WORK,R10
         SPACE 1
         LA    R13,SAVE2              SET UP NEW SAVE AREA
         ST    R14,SAVE2              AND SAVE RETURN ADDRESS
         SPACE 1
         CHECK RPL=(R6)
         SPACE 1
         TM    STOPECB,X'40'          SHUTDOWN IN PROGRESS?
         BO    RECVEND                  YES, ALL DONE
         SPACE 1
         LR    R4,R15                 SAVE RETURN CODE
         LR    R5,R0                   AND REASON CODE
         SPACE 1
         LA    R3,RECVBUFF
         SHOWCB AM=VTAM,RPL=(R6),FIELDS=(AREA,USER,ARG),               X
               AREA=(R3),LENGTH=LRECVBUF,MF=(G,WORKAREA)
         CHKERR ,
         L     R7,RECVARG
         SPACE 1
         ICM   R1,B'1111',RECVUSER    -> TABLE ENTRY
         BZ    REDRIVE                  UNKNOWN TERMINAL
         CLI   0(R1),0                UNSOLICITED?
         BE    REDRIVE                  YES, IGNORE THE READ
         SPACE 1
         LR    R0,R5                  RESTORE REASON CODE
         LTR   R15,R4                 WAS RECEIVE OK?
         BZ    TESTFME                  YEP, CHECK OUT FME
         SPACE 1
         LA    R3,WORKAREA
         SHOWCB AM=VTAM,RPL=(R6),FIELDS=(RTNCD,FDBK2,USENSEI),         X
               AREA=(R3),LENGTH=12,MF=(G,WORKAREA+12)
         CHKERR ,
         SPACE 1
         CLI   WORKAREA+3,4           RTCND=4?
         BNE   BAD$RECV                 NO, NOT HARDWARE ERROR
         SPACE 1
         CLI   WORKAREA+7,3           FDBK2=3?
         BNE   BAD$RECV                 NO, NOT HARDWARE ERROR
         SPACE 1
         RECEIVE RPL=(R6)             REDRIVE THE RECEIVE
         CHKERR ,
         SPACE 1
         UNPK  DWORD(5),WORKAREA+10(3)  GET SENSE INFO
         TR    DWORD(4),HEXTABLE-C'0' MAKE PRINTABLE HEX
         SPACE 1
         MVC   WORKAREA(LFORCWTO),IFORCWTO
         SETINSRT ,
         L     R4,RECVUSER            -> TABLE ENTRY
         MVC   0(8,R1),CIDNAME-CIDENTRY(R4)  INSERT TERMINAL ID
         SPACE 1
         SETINSRT ,
         MVC   0(4,R1),DWORD          INSERT SENSE INFO
         SPACE 1
         WTO   MF=(E,WORKAREA)        REPORT THE STUFF
         SPACE 1
         XC    0(CIDLENTH,R4),0(R4)   CLEAR TERMINAL INFO
         SPACE 1
         GETRPL ,
         L     R0,=A(FREPLXIT)
         CLSDST RPL=(1),OPTCD=(ASY,RELEASE),ARG=(R7),EXIT=(R0)         X
                                      RELEASE THE REMINAL
         CHKERR ,
         SPACE 2
         B     RECVEND
         SPACE 2
BAD$RECV DS    0H
         LR    R0,R5                  RESTORE REASON CODE
         LR    R15,R4                         ERROR CODE
         CHKERR TYPE=ABORT
         SPACE 1
TESTFME  DS    0H
         TESTCB AM=VTAM,RPL=(R6),RESPOND=NFME,ERET=ABEND$CB,           X
               MF=(G,WORKAREA)
         BE    CHKRESP
         SPACE 1
         GETRPL ,
         L     R0,=A(FREPLXIT)
         SEND  RPL=(1),STYPE=RESP,RESPOND=(NEX,FME,NRRN),OPTCD=ASY,    X
               ARG=(R7),EXIT=(R0)
         CHKERR ,
         SPACE 1
CHKRESP  DS    0H
         L     R5,RECVAREA
         MVC   CARD,=80C' '
         XC    CARD(3),CARD           FIRST AID ALONE
         OC    CARD,0(R5)
         CLI   3(R5),X'11'            LEADING SBA
         BNE   *+4+6
         MVC   CARD+3(L'CARD-6),CARD+6  COMPRESS THE CARD
         MVC   0(80,R5),=80C' '       CLEAR INPUT BUFFER
         SPACE 1
         CLC   =C'SENDF2 ',CARD+3
         BE    DOSENDF2
         SPACE 1
         RECEIVE RPL=(R6)             REDRIVE IT
         CHKERR ,
         SPACE 1
         LA    R4,CANTCLER
         CLI   CARD,X'6D'             CLEAR KEY?
         BE    RESEND                   TOO BAD
         SPACE 1
         LA    R4,WHYINTRP
         CLI   CARD,X'6C'             PA1 KEY?
         BE    RESEND                   TOO BAD
         SPACE 1
         OC    CARD(3),CARD           ALL ZEROES INPUT?
         BZ    SENDELAY                 SIGNAL COMPLETED
         SPACE 1
         CLC   =C'LOGOFF',CARD+3
         BE    DOLOGOFF
         SPACE 1
         CLC   =C'SHUTDOWN',CARD+3
         BE    DOSHUTD
         SPACE 1
         CLC   =C'SHOWTERM',CARD+3
         BE    DOSHOWT
         SPACE 1
         CLC   =C'STATS',CARD+3
         BE    DOSHOWS
         SPACE 1
         CLC   =C'SHOWALL',CARD+3
         BE    DOSHOWA
         SPACE 1
         CLC   =C'SHOW TERM',CARD+3
         BE    DOSHOWT
         SPACE 1
         CLC   =C'SHOW ALL',CARD+3
         BE    DOSHOWA
         SPACE 1
         CLC   =C'STATUS ',CARD+3
         BE    DOSTATUS
         SPACE 1
         CLC   =C'SHOW APP',CARD+3
         BE    DOSHOWP
         SPACE 1
         CLC   =C'SEND ',CARD+3
         BE    DOSEND
         SPACE 1
         LA    R4,PROMPT2
         CLC   =C'PROMPT2',CARD+3
         BE    RESEND
         SPACE 1
         LA    R4,PROMPT1
         B     RESEND
         SPACE 1
DOLOGOFF DS    0H
         GETRPL ,
         L     R0,=A(FREPLXIT)
         SEND  RPL=(1),STYPE=REQ,CONTROL=DATA,OPTCD=(ASY),             X
               AREA=LOGMSG,RECLEN=LLOGMSG,RESPOND=(NEX,FME,NRRN),      X
               POST=SCHED,BRACKET=(NBB,EB),ARG=(R7),EXIT=(R0)
         CHKERR ,
         SPACE 1
         MVC   WORKAREA(LLOFFWTO),ILOFFWTO
         SETINSRT ,
         L     R4,RECVUSER            -> TABLE ENTRY
         MVC   0(8,R1),CIDNAME-CIDENTRY(R4)  INSERT TERMINAL ID
         SPACE 1
         WTO   MF=(E,WORKAREA)        REPORT THE STUFF
         SPACE 1
         XC    0(CIDLENTH,R4),0(R4)   CLEAR THE ENTRY
         SPACE 1
         SCHEDCLS ARG=(R7)            SCHEDULE CLSDST
         SPACE 2
         B     RECVEND
         SPACE 2
DOSHOWT  DS    0H
         L     R4,RECVUSER            -> TABLE ENTRY
         USING CIDENTRY,R4
         SPACE 1
         MVC   WORKAREA(LTERMMSG),TERMMSG  PRIME MESSAGE
         SPACE 1
         SETINSRT TYPE=SEND
         MVC   0(8,R1),CIDNAME        INSERT TERMINAL NAME
         SPACE 1
         LH    R0,CIDROWS
         CVD   R0,DWORD
         SETINSRT TYPE=SEND
         UNPK  0(2,R1),DWORD+6(2)     INSERT ROWS
         OI    1(R1),X'F0'
         SPACE 1
         LH    R0,CIDCOLS
         CVD   R0,DWORD
         SETINSRT TYPE=SEND
         UNPK  0(2,R1),DWORD+6(2)     INSERT COLUMNS
         OI    1(R1),X'F0'
         SPACE 1
         GETRPL ,
         L     R0,=A(FREPLXIT)
         SEND  RPL=(1),STYPE=REQ,CONTROL=DATA,OPTCD=(ASY),             X
               AREA=WORKAREA,RECLEN=LTERMMSG,RESPOND=(NEX,FME,NRRN),   X
               POST=SCHED,BRACKET=(NBB,NEB),ARG=(R7),EXIT=(R0),        X
               CHNGDIR=(CMD)
         CHKERR ,
         SPACE 1
         DROP  R4
         SPACE 1
         B     RECVEND
         SPACE 2
DOSHOWP  DS    0H
         MVC   WORKAREA(LAPPLMSG),IAPPLMSG  PRIME MESSAGE
         SPACE 1
         SETINSRT TYPE=SEND
         MVC   0(8,R1),APPLID         INSERT APPLID
         SPACE 1
         GETRPL ,
         L     R0,=A(FREPLXIT)
         SEND  RPL=(1),STYPE=REQ,CONTROL=DATA,OPTCD=(ASY),             X
               AREA=WORKAREA,RECLEN=LAPPLMSG,RESPOND=(NEX,FME,NRRN),   X
               POST=SCHED,BRACKET=(NBB,NEB),ARG=(R7),EXIT=(R0),        X
               CHNGDIR=(CMD)
         CHKERR ,
         SPACE 1
         B     RECVEND
         SPACE 2
DOSENDF2 DS    0H
         GETRPL ,
         L     R0,=A(F2EXIT1)
         SEND  RPL=(1),STYPE=REQ,CONTROL=DATA,OPTCD=(ASY,CS),          X
               AREA==X'F2',RECLEN=1,RESPOND=(NEX,FME,NRRN),            X
               POST=SCHED,BRACKET=(NBB,NEB),ARG=(R7),EXIT=(R0),        X
               CHNGDIR=(CMD)
         CHKERR ,
         SPACE 1
         B     REDRIVE
         SPACE 2
DOSHOWS  DS    0H
         MVC   WORKAREA(LSTATMSG),STATMSG
         SETINSRT TYPE=SEND
         L     R15,RPLTOTAL
         CVD   R15,DWORD
         UNPK  0(3,R1),DWORD+6(2)     INSERT COUNT
         OI    2(R1),X'F0'
         SPACE 1
         SETINSRT TYPE=SEND
         L     R15,RPLREQST
         CVD   R15,DWORD
         UNPK  0(3,R1),DWORD+6(2)     INSERT COUNT
         OI    2(R1),X'F0'
         SPACE 1
         GETRPL ,
         L     R0,=A(FREPLXIT)
         SEND  RPL=(1),STYPE=REQ,CONTROL=DATA,OPTCD=(ASY),             X
               AREA=WORKAREA,RECLEN=LSTATMSG,RESPOND=(NEX,FME,NRRN),   X
               POST=SCHED,BRACKET=(NBB,NEB),ARG=(R7),EXIT=(R0),        X
               CHNGDIR=(CMD)
         CHKERR ,
         SPACE 1
         B     RECVEND
         SPACE 2
DOSHOWA  DS    0H
         MVC   WORKAREA(LSHALMSG),SHALMSG
         SPACE 1
         LA    R5,CIDLIST
         USING CIDENTRY,R5
         LA    R0,NUMCIDS
DOSHOWA1 DS    0H
         OC    CIDCID,CIDCID          ENTRY ACTIVE?
         BZ    DOSHOWA2                 NO, SKIP IT
         SPACE 1
         SETINSRT ,
         MVC   0(8,R1),CIDNAME        COPY ID
         SPACE 1
DOSHOWA2 DS    0H
         LA    R5,CIDENTRY+CIDLENTH   -> NEXT ENTRY
         BCT   R0,DOSHOWA1            AND CHECK IT
         SPACE 1
         DROP  R5
         SPACE 1
         LA    R0,WORKAREA-8
         SR    R1,R0                  LENGTH OF MESSAGE
         LR    R5,R1                  SAFE REGISTER
         SPACE 1
         GETRPL ,
         L     R0,=A(FREPLXIT)
         SEND  RPL=(1),STYPE=REQ,CONTROL=DATA,OPTCD=(ASY),             X
               AREA=WORKAREA,RECLEN=(R5),RESPOND=(NEX,FME,NRRN),       X
               POST=SCHED,BRACKET=(NBB,NEB),ARG=(R7),EXIT=(R0),        X
               CHNGDIR=(CMD)
         CHKERR ,
         SPACE 1
         B     RECVEND
         SPACE 2
DOSHUTD  DS    0H
         GETRPL ,
         L     R0,=A(FREPLXIT)
         SEND  RPL=(1),STYPE=REQ,CONTROL=DATA,OPTCD=(ASY),             X
               AREA=SHUTDMSG,RECLEN=LSHUTDMS,RESPOND=(NEX,FME,NRRN),   X
               POST=SCHED,BRACKET=(NBB,EB),ARG=(R7),EXIT=(R0)
         CHKERR ,
         SPACE 1
         MVC   WORKAREA(LSHUTWTO),ISHUTWTO
         SETINSRT ,
         L     R4,RECVUSER
         MVC   0(8,R1),CIDNAME-CIDENTRY(R4)
         WTO   MF=(E,WORKAREA)
         SPACE 1
         POST  STOPECB
         SPACE 1
         B     RECVEND
         SPACE 2
DOSTATUS DS    0H
         L     R4,RECVUSER
         MVC   CIDAPPLN-CIDENTRY(,R4),CARD+10  SAVE APPLID
         SPACE 1
         TRT   CIDAPPLN-CIDENTRY(,R4),TABLE51
         BZ    STATUS2
         SPACE 1
         LA    R2,CIDAPPLN+L'CIDAPPLN-1-CIDENTRY(,R4)
         SR    R2,R1                  LENGTH TO BLANK
         MVC   0(*-*,R1),=8C' '       BLANK MODEL
         EX    R2,*-6                 BLANK THE END
         SPACE 1
STATUS2  DS    0H
         LA    R2,CIDAPPLN-CIDENTRY(,R4)  -> APPLICATION NAME
         SPACE 1
         L     R4,NIBLENTH
         MH    R4,=AL2(NUMCIDS)
         A     R4,NIBADDR
         MODCB NIB=(R4),NAME=(*,0(R2)),AM=VTAM,MF=(G,WORKAREA)         X
                                      INSERT SPECIFIED APPLID IN NIB
         CHKERR ,
         SPACE 1
         GETRPL ,                     GET AN RPL
         SPACE 1
         LA    R15,4                  PREFIX LENGTH
         LCR   R15,R15
         AR    R15,R1                 -> PREFIX
         MVC   0(4,R15),RECVUSER      SAVE CID POINTER IN RPL PREFIX
         SPACE 1
         L     R0,=A(STATEXIT)
         L     R2,RECVUSER
         LA    R2,CIDBIND+24-CIDENTRY(R2)
         INQUIRE RPL=(1),EXIT=(R0),NIB=(R4),OPTCD=(ASY,APPSTAT),       X
               AREA=(R2),AREALEN=4    IS OTHER APPLICATION ACTIVE?
         SPACE 1
         B     RECVEND                ALL SCHEDULED
         SPACE 2
DOSEND   DS    0H
         LA    R1,CARD+8+8
         TRT   CARD+8(8),BLANKTAB     FIND TERMINAL ID
         ST    R1,TEXTSTRT
         LA    R0,CARD+8
         SR    R1,R0                  EX LENGTH OF ID
         MVC   DWORD,=8C' '
         MVC   DWORD(*-*),CARD+8
         EX    R1,*-6                 COPY TARGET TERMINAL
         SPACE 1
         LA    R4,CIDLIST
         USING CIDENTRY,R4
         LA    R0,NUMCIDS
SENDFIND DS    0H
         CLC   CIDNAME,DWORD          TERMINAL LOGGED ON?
         BE    DOTHESND                 YES, DO THE SEND
         SPACE 1
         LA    R4,CIDENTRY+CIDLENTH   -> NEXT SLOT
         BCT   R0,SENDFIND            AND CHECK IT
         SPACE 1
         MVC   WORKAREA(LSENDMS1),ISENDMS1  PRIME FAILURE
         LA    R4,LSENDMS1
         B     SENDDONE
         SPACE 1
DOTHESND DS    0H
         MVC   WORKAREA(LSENDMS9),ISENDMS9
         SPACE 1
         SETINSRT TYPE=SEND
         L     R15,RECVUSER
         MVC   0(8,R1),CIDNAME-CIDENTRY(R15)
         SPACE 1
         LA    R1,CARD+79
         TRT   CARD+3(L'CARD-3),TABLE51
         SPACE 1
         L     R14,TEXTSTRT
         SR    R1,R14                  LENGTH OF MESSAGE
         ST    R1,24(,R13)             SAVE IT
         SPACE 1
         SETINSRT TYPE=SEND
         L     R15,24(,R13)            LOAD LENGTH
         L     R14,TEXTSTRT                 ADDRESS
         MVC   0(*-*,R1),0(R14)        MOVE MODEL
         EX    R15,*-6                 COMPLETE THE MESSAGE
         SPACE 1
         TM    BINCMNP2+CIDBIND-ISTDBIND,BINHDXFF  TARGET 1/2 DUPLEX?
         BZ    SENDNOW                               NO, SEND NOW
         SPACE 1
         GETMAIN RU,LV=WORKLEN,SP=12   GET A MESSAGE BUFFER
         MVC   0(LSENDMS9,R1),WORKAREA  COPY MESSAGE BUFFER
         ST    R1,CIDPENDM             SAVE PENDING MESSAGE
         SPACE 1
         GETRPL ,
         L     R0,=A(FREPLXIT)
         L     R2,CIDCID
         SEND  RPL=(1),STYPE=REQ,CONTROL=SIGNAL,OPTCD=(ASY),           X
               SIGDATA=X'00010000',RESPOND=(NEX,FME,NRRN),             X
               POST=SCHED,ARG=(R2),EXIT=(R0),BRACKET=(NBB,NEB)
         CHKERR ,
         SPACE 1
         B     SENDREPT
         SPACE 1
SENDNOW  DS    0H
         GETRPL ,
         L     R0,=A(FREPLXIT)
         L     R2,CIDCID
         SEND  RPL=(1),STYPE=REQ,CONTROL=DATA,OPTCD=(ASY),ARG=(R2),    X
               AREA=WORKAREA,RECLEN=LSENDMS9,RESPOND=(NEX,FME,NRRN),   X
               BRACKET=(NBB,NEB),POST=SCHED,EXIT=(R0)                  X
                                      SEND THE MESSAGE
         CHKERR ,
         SPACE 1
SENDREPT DS    0H
         MVC   WORKAREA(LSENDMS2),ISENDMS2
         LA    R4,LSENDMS2
         SPACE 1
SENDDONE DS    0H
         SETINSRT TYPE=SEND
         MVC   0(8,R1),DWORD
         SPACE 1
         GETRPL ,
         L     R0,=A(FREPLXIT)
         SEND  RPL=(1),STYPE=REQ,CONTROL=DATA,OPTCD=(ASY),             X
               AREA=WORKAREA,RECLEN=(R4),RESPOND=(NEX,FME,NRRN),       X
               POST=SCHED,BRACKET=(NBB,NEB),ARG=(R7),EXIT=(R0),        X
               CHNGDIR=(CMD)
         CHKERR ,
         SPACE 1
         B     RECVEND
         SPACE 2
SENDELAY DS    0H
         L     R4,RECVUSER
         USING CIDENTRY,R4
         SPACE 1
         GETRPL ,
         L     R5,CIDPENDM
         L     R0,=A(FREPLXIT)
         SEND  RPL=(1),STYPE=REQ,CONTROL=DATA,OPTCD=(ASY),ARG=(R7),    X
               AREA=(R5),RECLEN=LSENDMS9,RESPOND=(NEX,FME,NRRN),       X
               BRACKET=(NBB,NEB),POST=SCHED,EXIT=(R0),CHNGDIR=(CMD)    X
                                      SEND THE DELAYED MESSAGE
         CHKERR ,
         SPACE 1
         XC    CIDPENDM,CIDPENDM
         FREEMAIN RU,LV=WORKLEN,SP=12,A=(R5)  FREE THE BUFFER
         SPACE 1
         B     RECVEND
         SPACE 2
RESEND   DS    0H
         GETRPL ,
         L     R0,=A(FREPLXIT)
         SEND  RPL=(1),STYPE=REQ,CONTROL=DATA,OPTCD=(ASY),             X
               AREA=(R4),RECLEN=70,RESPOND=(NEX,FME,NRRN),             X
               POST=SCHED,BRACKET=(NBB,NEB),ARG=(R7),EXIT=(R0),        X
               CHNGDIR=(CMD)
         CHKERR ,
         SPACE 1
         B     RECVEND
         SPACE 1
REDRIVE  DS    0H
         RECEIVE RPL=(R6)
         CHKERR ,
         SPACE 1
         B     RECVEND
         SPACE 1
RECVEND  DS    0H
         L     R14,SAVE2
         XR    R15,R15
         BR    R14
         SPACE 2
ABEND$CB DS    0H
         CHKERR TYPE=ABORT
         SPACE 2
         LTORG ,
         SPACE 2
HEXTABLE DC    C'0123456789ABCDEF'
         SPACE 2
ILOFFWTO WTO   'TESTVTM2 - TERMINAL ???????? HAS LOGGED OFF',          X
               ROUTCDE=11,DESC=7,MF=L
LLOFFWTO EQU   *-ILOFFWTO
         SPACE 2
IFORCWTO WTO   'TESTVTM2 - HARDWARE ERROR ON ???????? - SENSE = ????', X
               ROUTCDE=11,DESC=7,MF=L
LFORCWTO EQU   *-IFORCWTO
         SPACE 2
ISHUTWTO WTO   'TESTVTM2 - SHUTDOWN COMMAND ACCEPTED FROM ????????',   X
               ROUTCDE=11,DESC=7,MF=L
LSHUTWTO EQU   *-ISHUTWTO
         SPACE 2
PROMPT1  DC    X'F5431140403C5D7F001D401311C1501DF8'
LSBASTUF EQU   *-PROMPT1
         DC    CL70'YOU GET STANDARD PROMPT # 1'
         SPACE 1
PROMPT2  DC    X'F5431140403C5D7F001D401311C1501DF8'
         DC    CL70'YOU HAVE REQUESTED PROMPT # 2'
         SPACE 1
LOGMSG   DC    X'F5431140403C5D7F001D401311C1501DF8'
         DC    C'LOGOFF COMMAND ACCEPTED - RETURNING TO VTAM'
LLOGMSG  EQU   *-LOGMSG
         SPACE 1
SHUTDMSG DC    X'F5431140403C5D7F001D401311C1501DF8'
         DC    C'SHUTDOWN NOW IN PROGRESS'
LSHUTDMS EQU   *-SHUTDMSG
         SPACE 1
CANTCLER DC    X'F5431140403C5D7F001D401311C1501DF8'
         DC    CL70'YOU CANT CLEAR THIS SCREEN'
         SPACE 1
WHYINTRP DC    X'F5431140403C5D7F001D401311C1501DF8'
         DC    CL70'WHY DO YOU WANT TO INTERRUPT ME??'
         SPACE 1
TERMMSG  DC    X'F5431140403C5D7F001D401311C1501DF8'
         DC    C'YOUR TERMINAL ID IS ????????, SIZE IS ??X??'
LTERMMSG EQU   *-TERMMSG
         SPACE 1
IAPPLMSG DC    X'F5431140403C5D7F001D401311C1501DF8'
         DC    C'TESTVTM2 APPLICATION ID IS ????????'
LAPPLMSG EQU   *-IAPPLMSG
         SPACE 1
STATMSG  DC    X'F5431140403C5D7F001D401311C1501DF8'
         DC    C'RPL STATISTICS: COUNT=???, USED=???'
LSTATMSG EQU   *-STATMSG
         SPACE 1
ISENDMS1 DC    X'F5431140403C5D7F001D401311C1501DF8'
         DC    C'MESSAGE NOT SEND - TERMINAL ???????? NOT LOGGED ON'
LSENDMS1 EQU   *-ISENDMS1
         SPACE 1
ISENDMS2 DC    X'F5431140403C5D7F001D401311C1501DF8'
         DC    C'MESSAGE SENT TO TERMINAL ????????'
LSENDMS2 EQU   *-ISENDMS2
         SPACE 1
ISENDMS9 DC    X'F5431140403C5D7F001D401311C1501DF8'
         DC    C'MESSAGE FROM ????????: ?'
         DC    75C' '
LSENDMS9 EQU   *-ISENDMS9
         SPACE 1
SHALMSG  DC    X'F5431140403C5D7F001D401311C1501DF8'
         DC    C'ACTIVE TERMINALS: '
         DC    7C'???????? '
LSHALMSG EQU   *-SHALMSG
         SPACE 2
BLANKTAB DC    256X'00'
         ORG   BLANKTAB+C' '
         DC    X'04'
         ORG   ,
         SPACE 2
TABLE51  DC    256X'00'
         ORG   TABLE51+X'51'
         DC    X'04'
         ORG   ,
         SPACE 2
IABNDWTO WTO   'TESTVTM2 - GENERATING USER ABEND CODE ??',             X
               ROUTCDE=(2,11),DESC=7,MF=L
LABNDWTO EQU   *-IABNDWTO
         SPACE 2
QUESTTAB DC    256X'00'
         ORG   QUESTTAB+C'?'
         DC    X'04'
         ORG   ,
         SPACE 2
         DROP  ,
         EJECT ,
GETRPL   DS    0H
         SAVE  (14,12),,GETRPL-SUBROUTINE
         SPACE 1
         LR    R12,R15
         USING GETRPL,R12
         SPACE 1
         LR    R10,R1
         USING #WORK,R10
         SPACE 1
GETRPL1  DS    0H
         ICM   R5,B'1111',RPLQUEUE    ANY FREE RPL'S?
         BZ    GETRPL3                  NO, GET A NEW ONE
         SPACE 1
         L     R1,0(,R5)              FETCH CHAIN POINTER
         CS    R5,R1,RPLQUEUE         ACQUIRE THIS RPL
         BNE   GETRPL1                  IN USE
         SPACE 1
         B     GETRPL9                GOT THE RPL
         SPACE 1
GETRPL3  DS    0H
         L     R5,RPLLENTH
         LA    R0,4(,R5)
         GETMAIN RU,LV=(0),SP=10      GET A NEW RPL
         LR    R5,R1                  AND POINT R5 TO IT
         SPACE 1
         L     R15,RPLTOTAL
         LA    R0,1(,R15)
         CS    R15,R0,RPLTOTAL
         BNE   *-4-4
         SPACE 1
GETRPL9  DS    0H
         L     R1,RPLLENTH            RPL LENGTH
         BCTR  R1,0                   DECREMENT FOR EX
         L     R15,MODELRPL           -> MODEL RPL
         MVC   4(*-*,R5),0(R15)       MOVE MODEL
         EX    R1,*-6                 COMPLETE THE RPL
         XC    0(4,R5),0(R5)          CLEAR THE POINTER
         SPACE 1
         L     R15,RPLREQST
         LA    R0,1(,R15)
         CS    R15,R0,RPLREQST
         BNE   *-4-4
         SPACE 1
         LA    R1,4(,R5)              -> THE RPL
         L     R14,12(,R13)
         RETURN (2,12),RC=0           AND RETURN
         SPACE 2
         LTORG ,
         SPACE 2
         DROP  ,
         EJECT ,
FREPLXIT DS    0H
         LR    R12,R15
         USING FREPLXIT,R12
         SPACE 1
         LR    R6,R1                  SAVE RPL ADDRESS
         USING IFGRPL,R6
         SPACE 1
         L     R8,RPLDACB             -> ACB
         USING IFGACB,R8
         SPACE 1
         LA    R10,4
         LCR   R10,R10
         L     R10,0(R10,R8)          FETCH ACB PREFIX
         USING #WORK,R10
         SPACE 1
         LA    R13,SAVE2              SET UP NEW SAVE AREA
         ST    R14,SAVE2              AND SAVE RETURN ADDRESS
         SPACE 1
         CHECK RPL=(R6)
         SPACE 1
         TM    STOPECB,X'40'          SHUTDOWN IN PROGRESS?
         BO    FREPLEND                 YES, ALL DONE
         SPACE 1
         CHKERR ,                     FAIL ON ANY ERROR
         SPACE 1
         FREERPL RPL=(R6)             GIVE UP RPL
         SPACE 1
FREPLEND DS    0H
         L     R14,SAVE2
         XR    R15,R15
         BR    R14
         SPACE 2
         LTORG ,
         SPACE 2
         DROP  ,
         EJECT ,
F2EXIT1  DS    0H
         LR    R12,R15
         USING F2EXIT1,R12
         SPACE 1
         LR    R6,R1                  SAVE RPL ADDRESS
         USING IFGRPL,R6
         SPACE 1
         L     R8,RPLDACB             -> ACB
         USING IFGACB,R8
         SPACE 1
         LA    R10,4
         LCR   R10,R10
         L     R10,0(R10,R8)          FETCH ACB PREFIX
         USING #WORK,R10
         SPACE 1
         LA    R13,SAVE2              SET UP NEW SAVE AREA
         ST    R14,SAVE2              AND SAVE RETURN ADDRESS
         SPACE 1
         CHECK RPL=(R6)
         SPACE 1
         TM    STOPECB,X'40'          SHUTDOWN IN PROGRESS?
         BO    F2EX1END                 YES, ALL DONE
         SPACE 1
         CHKERR ,                     FAIL ON ANY ERROR
         SPACE 1
         LA    R3,RECVBUFF
         SHOWCB AM=VTAM,RPL=(R6),FIELDS=(AREA,USER,ARG,RECLEN),        X
               AREA=(R3),LENGTH=LRECVBUF,MF=(G,WORKAREA)
         CHKERR ,
         SPACE 1
         L     R4,RECVUSER
         USING CIDENTRY,R4
         LH    R3,CIDROWS
         MH    R3,CIDCOLS
         DROP  R4
         SPACE 1
         LA    R0,4(R3,R3)
         GETMAIN RU,LV=(0),SP=34,BNDRY=PAGE
         ST    R0,0(,R1)
         LA    R4,4(,R1)
         SLL   R3,1
         SPACE 1
         L     R2,=A(F2EXIT2)
         RECEIVE RPL=(R6),RTYPE=(DFSYN,NDFASY,NRESP),                  X
               OPTCD=(ASY,SPEC,TRUNC,CS,Q),AREA=(R4),AREALEN=(R3),     X
               BRACKET=(NBB,NEB),EXIT=(R2)
         CHKERR ,
         SPACE 1
F2EX1END DS    0H
         L     R14,SAVE2
         XR    R15,R15
         BR    R14
         SPACE 2
         LTORG ,
         SPACE 2
         DROP  ,
         EJECT ,
F2EXIT2  DS    0H
         LR    R12,R15
         USING F2EXIT2,R12
         SPACE 1
         L     R11,=A(HEXTABLE)
         USING HEXTABLE,R11
         SPACE 1
         LR    R6,R1                  SAVE RPL ADDRESS
         USING IFGRPL,R6
         SPACE 1
         L     R8,RPLDACB             -> ACB
         USING IFGACB,R8
         SPACE 1
         LA    R10,4
         LCR   R10,R10
         L     R10,0(R10,R8)          FETCH ACB PREFIX
         USING #WORK,R10
         SPACE 1
         LA    R13,SAVE2              SET UP NEW SAVE AREA
         ST    R14,SAVE2              AND SAVE RETURN ADDRESS
         SPACE 1
         CHECK RPL=(R6)
         SPACE 1
         TM    STOPECB,X'40'          SHUTDOWN IN PROGRESS?
         BO    F2EX2END                 YES, ALL DONE
         SPACE 1
         LR    R4,R15                 SAVE RETURN CODE
         LR    R5,R0                   AND REASON CODE
         SPACE 1
         LA    R3,RECVBUFF
         SHOWCB AM=VTAM,RPL=(R6),FIELDS=(AREA,USER,ARG,RECLEN),        X
               AREA=(R3),LENGTH=LRECVBUF,MF=(G,WORKAREA)
         CHKERR ,
         L     R7,RECVARG
         SPACE 1
         ICM   R1,B'1111',RECVUSER    -> TABLE ENTRY
         DC    X'4780',S(*+1)           UNKNOWN TERMINAL
         SPACE 1
         LR    R0,R5                  RESTORE REASON CODE
         LTR   R15,R4                 WAS RECEIVE OK?
         DC    X'4770',S(*+1)           NO, FAIL S0C6
         SPACE 1
         TESTCB AM=VTAM,RPL=(R6),RESPOND=NFME,ERET=F2EXABND,           X
               MF=(G,WORKAREA)
         BE    F2EXCHKR
         SPACE 1
         GETRPL ,
         L     R0,=A(FREPLXIT)
         SEND  RPL=(1),STYPE=RESP,RESPOND=(NEX,FME,NRRN),OPTCD=ASY,    X
               ARG=(R7),EXIT=(R0)
         CHKERR ,
         SPACE 1
F2EXCHKR DS    0H
         L     R0,=A(FREPLXIT)
         SEND  RPL=(R6),STYPE=REQ,CONTROL=DATA,OPTCD=(ASY,CA),         X
               AREA=F2DONE,RECLEN=LF2DONE,RESPOND=(NEX,FME,NRRN),      X
               POST=SCHED,BRACKET=(NBB,NEB),ARG=(R7),EXIT=(R0),        X
               CHNGDIR=(CMD)
         CHKERR ,
         SPACE 1
         MVC   OSNAPDCB(LSNAPDCB),ISNAPDCB
         MVI   OPENSNAP,X'80'
         OPEN  (OSNAPDCB,OUTPUT),MF=(E,OPENLIST)
         SPACE 1
         TM    OSNAPDCB+DCBOFLGS-IHADCB,DCBOFOPN
         BZ    F2EXFBUF
         SPACE 1
         L     R2,SNAPCNT
         LA    R2,1(,R2)
         ST    R2,SNAPCNT
         SPACE 1
         L     R3,RECVAREA
         L     R4,RECVARLN
         AR    R4,R3
         BCTR  R4,0
         SPACE 1
         MVC   OSNAP(LSNAP),ISNAP
         SNAP  DCB=OSNAPDCB,ID=(R2),STORAGE=((R3),(R4)),MF=(E,OSNAP)
         SPACE 1
         CLOSE (OSNAPDCB),MF=(E,OPENSNAP)
         SPACE 1
F2EXFBUF DS    0H
         LA    R1,4
         LCR   R1,R1
         AR    R1,R3
         L     R0,0(,R1)
         FREEMAIN RU,LV=(0),A=(1),SP=34
         SPACE 1
F2EX2END DS    0H
         L     R14,SAVE2
         XR    R15,R15
         BR    R14
         SPACE 2
F2EXABND DS    0H
         DC    X'47F0',S(*+1)
         SPACE 2
ISNAPDCB DCB   DSORG=PS,MACRF=(W),RECFM=VBA,BLKSIZE=882,LRECL=125,     X
               DDNAME=SNAPFILE
LSNAPDCB EQU   *-ISNAPDCB
         SPACE 2
ISNAP    SNAP  DCB=1-1,STORAGE=(2-2,3-3),MF=L
LSNAP    EQU   *-ISNAP
         SPACE 2
         LTORG ,
         SPACE 2
F2DONE   DC    X'F5431140403C5D7F001D401311C1501DF8'
         DC    C'X''F2'' PROCESSING COMPLETE'
LF2DONE  EQU   *-F2DONE
         EJECT ,
CIDENTRY DSECT ,
         SPACE 1
CIDCID   DS    F                   CID VALUE
         SPACE 1
CIDNAME  DS    CL8                 NAME OF LTERM
         SPACE 1
CIDROWS  DS    H                   NUMBER OF ROWS
CIDCOLS  DS    H                   NUMBER OF COLUMNS
         SPACE 1
CIDAPPLN DS    CL8                 APPLID INQUIRED ABOUT
         SPACE 1
CIDPENDM DS    A                   -> PENDING MESSAGE
         SPACE 1
CIDBIND  DS    6D                  BIND INFO AREA
         SPACE 1
         DS    0D                  ALIGNMENT
         SPACE 1
CIDLENTH EQU   *-CIDENTRY          ENTRY LENGTH
         SPACE 3
CLOSENTY DSECT ,
         SPACE 1
CLOSFLAG DS    X                   SEEN FLAG
         DS    CL3                 ..RESERVED
         SPACE 1
CLOSECID DS    F                   CID OF TERMINAL TO CLSDST
         SPACE 1
CLOSLNTH EQU   *-CLOSENTY          LENGTH OF ENTRY
         EJECT ,
#WORK    DSECT ,
         SPACE 1
         DS    18F
         SPACE 1
SAVE2    DS    18F
         SPACE 1
SAVE3    DS    18F
         SPACE 1
APPLID   DS    CL8
         SPACE 1
REGSAVE  DS    3F
         SPACE 1
NIBADDR  DS    A
         SPACE 1
ACBADDR  DS    2F
         SPACE 1
ACBLENTH DS    F
RPLLENTH DS    F
NIBLENTH DS    F
         SPACE 1
STOPECB  DS    F
         SPACE 1
OPENLIST DS    F
         SPACE 2
OTIMRCOD DS    ((LTIMRCOD+3)/4)F
         SPACE 1
RECVBUFF DS    0F
RECVAREA DS    A
RECVUSER DS    A
RECVARG  DS    A
RECVARLN DS    F
LRECVBUF EQU   *-RECVBUFF
         SPACE 2
CARD     DS    CL80
CARD1    DS    CL80
CARD2    DS    CL80
         SPACE 2
RECVRPL1 DS    A
RECVRPL2 DS    A
MODELRPL DS    A
         SPACE 1
TEXTSTRT DS    F
         SPACE 1
RPLQUEUE DS    A
RPLREQST DS    F
RPLTOTAL DS    F
         SPACE 2
NUMCIDS  EQU   3
CIDLIST  DS    ((CIDLENTH*NUMCIDS)/8)D   CID TABLE AREA
         SPACE 1
DWORD    DS    D
         SPACE 1
NUMCLOSE EQU   2*NUMCIDS
PENDCLOS DS    ((CLOSLNTH*NUMCLOSE)/4)F  PENDING CLSDST TABLE
         SPACE 1
WORKAREA DS    20D
WORKLEN  EQU   *-WORKAREA
         SPACE 2
OSNAPDCB DCB   DSORG=PS,MACRF=(W),RECFM=VBA,BLKSIZE=882,LRECL=125,     X
               DDNAME=SNAPFILE
         SPACE 2
OSNAP    SNAP  DCB=OSNAPDCB,STORAGE=(2-2,3-3),MF=L
         SPACE 1
OPENSNAP OPEN  (OSNAPDCB,OUTPUT),MF=L
         SPACE 1
SNAPCNT  DS    F
         SPACE 3
#AMT     EQU   *-#WORK
         EJECT ,
         PRINT NOGEN
         SPACE 2
         IFGACB AM=VTAM
         SPACE 2
         IFGRPL AM=VTAM
         SPACE 2
         ISTDNIB ,
         SPACE 2
         ISTDBIND ,
         SPACE 2
         DCBD  DSORG=BS
         SPACE 3
         END
